"id","title","role","means","ends","highlight","kind","subkind","severity","false_positive"
17197,"This is a simple test story to try out the new workflow. Unfortunately, testing and getting it to work seems to be something that actually does take up time, so I m tracking this here.",NULL,"This is a simple test story to try out the new workflow. Unfortunately, testing and getting it to work seems to be","something that actually does take up time, so I m tracking this here.","This is a simple test story to try out the new workflow<span class='highlight-text severity-high'>. Unfortunately, testing and getting it to work seems to be something that actually does take up time, so I m tracking this here.</span>","minimal","punctuation","high",False
17197,"This is a simple test story to try out the new workflow. Unfortunately, testing and getting it to work seems to be something that actually does take up time, so I m tracking this here.",NULL,"This is a simple test story to try out the new workflow. Unfortunately, testing and getting it to work seems to be","something that actually does take up time, so I m tracking this here.","Use the most common template: So","uniform","uniform","medium",False
17196,"Following from MESOS 2340, which now allows Master to correctly decode JSON information MasterInfo published to Zookeeper, we can now enable the Master Leader Contender to serialize it too in JSON.",NULL,"Following from MESOS 2340, which now allows Master to correctly decode JSON information MasterInfo published to Zookeeper, we can now enable the Master Leader Contender to serialize it too in JSON.",NULL,"Add for who this story is","well_formed","no_role","high",False
17199,"The information exposed by the Framework via the WebUIUrl does not always resolves to a routable endpoint eg, when the hostname is not publicly resolvable, or resolvable at all . In order to facilitate service discovery via, eg, Marathon UI we want to add the information in FrameworksPid via the state summary endpoint.",NULL,"The information exposed by the Framework via the WebUIUrl does not always resolves to a routable endpoint eg, when the hostname is not publicly resolvable, or resolvable at all .","In order to facilitate service discovery via, eg, Marathon UI we want to add the information in FrameworksPid via the state summary endpoint.","Add for who this story is","well_formed","no_role","high",False
17199,"The information exposed by the Framework via the WebUIUrl does not always resolves to a routable endpoint eg, when the hostname is not publicly resolvable, or resolvable at all . In order to facilitate service discovery via, eg, Marathon UI we want to add the information in FrameworksPid via the state summary endpoint.",NULL,"The information exposed by the Framework via the WebUIUrl does not always resolves to a routable endpoint eg, when the hostname is not publicly resolvable, or resolvable at all .","In order to facilitate service discovery via, eg, Marathon UI we want to add the information in FrameworksPid via the state summary endpoint.","The information exposed by the Framework via the WebUIUrl does not always resolves to a routable endpoint eg, when the hostname is not publicly resolvable, or resolvable at all <span class='highlight-text severity-high'>. In order to facilitate service discovery via, eg, Marathon UI we want to add the information in FrameworksPid via the state summary endpoint.</span>","minimal","punctuation","high",False
17199,"The information exposed by the Framework via the WebUIUrl does not always resolves to a routable endpoint eg, when the hostname is not publicly resolvable, or resolvable at all . In order to facilitate service discovery via, eg, Marathon UI we want to add the information in FrameworksPid via the state summary endpoint.",NULL,"The information exposed by the Framework via the WebUIUrl does not always resolves to a routable endpoint eg, when the hostname is not publicly resolvable, or resolvable at all .","In order to facilitate service discovery via, eg, Marathon UI we want to add the information in FrameworksPid via the state summary endpoint.","Use the most common template: So","uniform","uniform","medium",False
17191,"Create a document that describes the problems with having only single role frameworks and proposes an MVP solution and implementation approach.",NULL,"Create a document that describes the problems with having only single role frameworks and proposes an MVP solution and implementation approach.",NULL,"Add for who this story is","well_formed","no_role","high",False
17191,"Create a document that describes the problems with having only single role frameworks and proposes an MVP solution and implementation approach.",NULL,"Create a document that describes the problems with having only single role frameworks and proposes an MVP solution and implementation approach.",NULL,"Create a document that describes the problems with having only single role frameworks<span class='highlight-text severity-high'> and </span>proposes an MVP solution and implementation approach.","atomic","conjunctions","high",False
17193,"With the new JSON MasterInfo published to ZK, we want to provide a simple library class for Java Framework developers to retrieve info about the masters and the leader.",NULL,"With the new JSON MasterInfo published to ZK, we want to provide a simple library class for Java Framework developers to retrieve info about the masters and the leader.",NULL,"Add for who this story is","well_formed","no_role","high",False
17194,"With the new JSON MasterInfo published to ZK, we want to provide a simple library class for Python developers to retrieve info about the masters and the leader.",NULL,"With the new JSON MasterInfo published to ZK, we want to provide a simple library class for Python developers to retrieve info about the masters and the leader.",NULL,"Add for who this story is","well_formed","no_role","high",False
17195,"Following from MESOS 2902 we want to enable the same functionality in the Mesos Agents too. This is probably best done once we implement the new os shell semantics, as described in MESOS 3142.",NULL,"Following from MESOS 2902 we want to enable the same functionality in the Mesos Agents too. This is probably best done once we implement the new os shell semantics, as described in MESOS 3142.",NULL,"Add for who this story is","well_formed","no_role","high",False
17195,"Following from MESOS 2902 we want to enable the same functionality in the Mesos Agents too. This is probably best done once we implement the new os shell semantics, as described in MESOS 3142.",NULL,"Following from MESOS 2902 we want to enable the same functionality in the Mesos Agents too. This is probably best done once we implement the new os shell semantics, as described in MESOS 3142.",NULL,"Following from MESOS 2902 we want to enable the same functionality in the Mesos Agents too<span class='highlight-text severity-high'>. This is probably best done once we implement the new os shell semantics, as described in MESOS 3142.</span>","minimal","punctuation","high",False
17197,"This is a simple test story to try out the new workflow. Unfortunately, testing and getting it to work seems to be something that actually does take up time, so I m tracking this here.",NULL,"This is a simple test story to try out the new workflow. Unfortunately, testing and getting it to work seems to be","something that actually does take up time, so I m tracking this here.","Add for who this story is","well_formed","no_role","high",False
17197,"This is a simple test story to try out the new workflow. Unfortunately, testing and getting it to work seems to be something that actually does take up time, so I m tracking this here.",NULL,"This is a simple test story to try out the new workflow. Unfortunately, testing and getting it to work seems to be","something that actually does take up time, so I m tracking this here.","This is a simple test story to try out the new workflow. Unfortunately, testing<span class='highlight-text severity-high'> and </span>getting it to work seems to be something that actually does take up time, so I m tracking this here.","atomic","conjunctions","high",False
17200,"This is a component of the slave that informs the slave about the possible corrections that need to be performed e.g., shutdown container using recoverable resources . This needs to be integrated with the resource monitor. Need to figure out the metrics used for sending corrections e.g., scheduling latency, usage, informed by executor scheduler We also need to figure out the feedback loop between the QoS controller and the Resource Estimator. code class QoSController public QoSController ResourceMonitor monitor ; process Queue QoSCorrection correction ; ; code ",NULL,"This is a component of the slave that informs the slave about the possible corrections that need to be performed e.g., shutdown container using recoverable resources . This needs to be integrated with the resource monitor. Need to figure out the metrics used for sending corrections e.g., scheduling latency, usage, informed by executor scheduler We also need to figure out the feedback loop between the QoS controller and the Resource Estimator. code class QoSController public QoSController ResourceMonitor monitor ; process Queue QoSCorrection correction ; ; code ",NULL,"Add for who this story is","well_formed","no_role","high",False
17200,"This is a component of the slave that informs the slave about the possible corrections that need to be performed e.g., shutdown container using recoverable resources . This needs to be integrated with the resource monitor. Need to figure out the metrics used for sending corrections e.g., scheduling latency, usage, informed by executor scheduler We also need to figure out the feedback loop between the QoS controller and the Resource Estimator. code class QoSController public QoSController ResourceMonitor monitor ; process Queue QoSCorrection correction ; ; code ",NULL,"This is a component of the slave that informs the slave about the possible corrections that need to be performed e.g., shutdown container using recoverable resources . This needs to be integrated with the resource monitor. Need to figure out the metrics used for sending corrections e.g., scheduling latency, usage, informed by executor scheduler We also need to figure out the feedback loop between the QoS controller and the Resource Estimator. code class QoSController public QoSController ResourceMonitor monitor ; process Queue QoSCorrection correction ; ; code ",NULL,"This is a component of the slave that informs the slave about the possible corrections that need to be performed e<span class='highlight-text severity-high'>.g., shutdown container using recoverable resources . This needs to be integrated with the resource monitor. Need to figure out the metrics used for sending corrections e.g., scheduling latency, usage, informed by executor scheduler We also need to figure out the feedback loop between the QoS controller and the Resource Estimator. code class QoSController public QoSController ResourceMonitor monitor ; process Queue QoSCorrection correction ; ; code </span>","minimal","punctuation","high",False
17201,"Currently, the C library sends different messages to Master instead of a single Call message. To vet the new Call API it should send Call messages. Master should be updated to handle all types of Calls.",NULL,"Currently, the C library sends different messages to Master instead of a single Call message. To vet the new Call API it should send Call messages. Master should be updated to handle all types of Calls.",NULL,"Add for who this story is","well_formed","no_role","high",False
17201,"Currently, the C library sends different messages to Master instead of a single Call message. To vet the new Call API it should send Call messages. Master should be updated to handle all types of Calls.",NULL,"Currently, the C library sends different messages to Master instead of a single Call message. To vet the new Call API it should send Call messages. Master should be updated to handle all types of Calls.",NULL,"Currently, the C library sends different messages to Master instead of a single Call message<span class='highlight-text severity-high'>. To vet the new Call API it should send Call messages. Master should be updated to handle all types of Calls.</span>","minimal","punctuation","high",False
17202,"The master exports a monotonically increasing counter of tasks transitioned to TASK LOST. This loses fidelity of the source of the lost task. A first step in exposing the source of lost tasks might be to just differentiate between TASK LOST transitions initiated by the master vs the slave and maybe bad input from the scheduler .",NULL,"The master exports a monotonically increasing counter of tasks transitioned to TASK LOST. This loses fidelity of the source of the lost task. A first step in exposing the source of lost tasks might be to just differentiate between TASK LOST transitions initiated by the master vs the slave and maybe bad input from the scheduler .",NULL,"Add for who this story is","well_formed","no_role","high",False
17202,"The master exports a monotonically increasing counter of tasks transitioned to TASK LOST. This loses fidelity of the source of the lost task. A first step in exposing the source of lost tasks might be to just differentiate between TASK LOST transitions initiated by the master vs the slave and maybe bad input from the scheduler .",NULL,"The master exports a monotonically increasing counter of tasks transitioned to TASK LOST. This loses fidelity of the source of the lost task. A first step in exposing the source of lost tasks might be to just differentiate between TASK LOST transitions initiated by the master vs the slave and maybe bad input from the scheduler .",NULL,"The master exports a monotonically increasing counter of tasks transitioned to TASK LOST<span class='highlight-text severity-high'>. This loses fidelity of the source of the lost task. A first step in exposing the source of lost tasks might be to just differentiate between TASK LOST transitions initiated by the master vs the slave and maybe bad input from the scheduler .</span>","minimal","punctuation","high",False
17192,"Tasks currently log their output i.e. stdout stderr to files the sandbox on an agent s disk. In some cases, the accumulation of these logs can completely fill up the agent s disk and thereby kill the task or machine. To prevent this, we should either implement a log rotation mechanism or capped size logging. This would be used by executors to control the amount of logs they keep. Master agent logs will not be affected. We will first scope out several possible approaches for log rotation capping in a design document see MESOS 3356 . Once an approach is chosen, this story will be broken down into some corresponding issues.",NULL,"Tasks currently log their output i.e. stdout stderr to files the sandbox on an agent s disk. In some cases, the accumulation of these logs can completely fill up the agent s disk and thereby kill the task or machine. To prevent this, we should either implement a log rotation mechanism or capped size logging. This would be used by executors to control the amount of logs they keep. Master agent logs will not be affected. We will first scope out several possible approaches for log rotation capping in a design document see MESOS 3356 . Once an approach is chosen, this story will be broken down into some corresponding issues.",NULL,"Add for who this story is","well_formed","no_role","high",False
17192,"Tasks currently log their output i.e. stdout stderr to files the sandbox on an agent s disk. In some cases, the accumulation of these logs can completely fill up the agent s disk and thereby kill the task or machine. To prevent this, we should either implement a log rotation mechanism or capped size logging. This would be used by executors to control the amount of logs they keep. Master agent logs will not be affected. We will first scope out several possible approaches for log rotation capping in a design document see MESOS 3356 . Once an approach is chosen, this story will be broken down into some corresponding issues.",NULL,"Tasks currently log their output i.e. stdout stderr to files the sandbox on an agent s disk. In some cases, the accumulation of these logs can completely fill up the agent s disk and thereby kill the task or machine. To prevent this, we should either implement a log rotation mechanism or capped size logging. This would be used by executors to control the amount of logs they keep. Master agent logs will not be affected. We will first scope out several possible approaches for log rotation capping in a design document see MESOS 3356 . Once an approach is chosen, this story will be broken down into some corresponding issues.",NULL,"Tasks currently log their output i.e. stdout stderr to files the sandbox on an agent s disk. In some cases, the accumulation of these logs can completely fill up the agent s disk<span class='highlight-text severity-high'> and </span>thereby kill the task<span class='highlight-text severity-high'> or </span>machine. To prevent this, we should either implement a log rotation mechanism or capped size logging. This would be used by executors to control the amount of logs they keep. Master agent logs will not be affected. We will first scope out several possible approaches for log rotation capping in a design document see MESOS 3356 . Once an approach is chosen, this story will be broken down into some corresponding issues.","atomic","conjunctions","high",False
17192,"Tasks currently log their output i.e. stdout stderr to files the sandbox on an agent s disk. In some cases, the accumulation of these logs can completely fill up the agent s disk and thereby kill the task or machine. To prevent this, we should either implement a log rotation mechanism or capped size logging. This would be used by executors to control the amount of logs they keep. Master agent logs will not be affected. We will first scope out several possible approaches for log rotation capping in a design document see MESOS 3356 . Once an approach is chosen, this story will be broken down into some corresponding issues.",NULL,"Tasks currently log their output i.e. stdout stderr to files the sandbox on an agent s disk. In some cases, the accumulation of these logs can completely fill up the agent s disk and thereby kill the task or machine. To prevent this, we should either implement a log rotation mechanism or capped size logging. This would be used by executors to control the amount of logs they keep. Master agent logs will not be affected. We will first scope out several possible approaches for log rotation capping in a design document see MESOS 3356 . Once an approach is chosen, this story will be broken down into some corresponding issues.",NULL,"Tasks currently log their output i<span class='highlight-text severity-high'>.e. stdout stderr to files the sandbox on an agent s disk. In some cases, the accumulation of these logs can completely fill up the agent s disk and thereby kill the task or machine. To prevent this, we should either implement a log rotation mechanism or capped size logging. This would be used by executors to control the amount of logs they keep. Master agent logs will not be affected. We will first scope out several possible approaches for log rotation capping in a design document see MESOS 3356 . Once an approach is chosen, this story will be broken down into some corresponding issues.</span>","minimal","punctuation","high",False
17198,"This is the first basic step in ensuring the basic call functionality processing a noformat POST call noformat and returning 202 if all goes well; 401 if not authorized; and 403 if the request is malformed. We ll get more sophisticated as the work progressed eg, supporting 415 if the content type is not of the right kind .",NULL,"This is the first basic step in ensuring the basic call functionality processing a noformat POST call noformat and returning 202 if all goes well; 401 if not authorized; and 403 if the request is malformed. We ll get more sophisticated as the work progressed eg, supporting 415 if the content type is not of the right kind .",NULL,"Add for who this story is","well_formed","no_role","high",False
17198,"This is the first basic step in ensuring the basic call functionality processing a noformat POST call noformat and returning 202 if all goes well; 401 if not authorized; and 403 if the request is malformed. We ll get more sophisticated as the work progressed eg, supporting 415 if the content type is not of the right kind .",NULL,"This is the first basic step in ensuring the basic call functionality processing a noformat POST call noformat and returning 202 if all goes well; 401 if not authorized; and 403 if the request is malformed. We ll get more sophisticated as the work progressed eg, supporting 415 if the content type is not of the right kind .",NULL,"This is the first basic step in ensuring the basic call functionality processing a noformat POST call noformat<span class='highlight-text severity-high'> and </span>returning 202 if all goes well; 401 if not authorized; and 403 if the request is malformed. We ll get more sophisticated as the work progressed eg, supporting 415 if the content type is not of the right kind .","atomic","conjunctions","high",False
17198,"This is the first basic step in ensuring the basic call functionality processing a noformat POST call noformat and returning 202 if all goes well; 401 if not authorized; and 403 if the request is malformed. We ll get more sophisticated as the work progressed eg, supporting 415 if the content type is not of the right kind .",NULL,"This is the first basic step in ensuring the basic call functionality processing a noformat POST call noformat and returning 202 if all goes well; 401 if not authorized; and 403 if the request is malformed. We ll get more sophisticated as the work progressed eg, supporting 415 if the content type is not of the right kind .",NULL,"This is the first basic step in ensuring the basic call functionality processing a noformat POST call noformat and returning 202 if all goes well<span class='highlight-text severity-high'>; 401 if not authorized; and 403 if the request is malformed. We ll get more sophisticated as the work progressed eg, supporting 415 if the content type is not of the right kind .</span>","minimal","punctuation","high",False
17203,"There is some known kernel issue when we freeze the whole cgroup upon OOM. Mesos probably can just use PID namespace so that we will only need to kill the init of the pid namespace, instead of freezing all the processes and killing them one by one. But I am not quite sure if this would break the existing code.",NULL,"There is some known kernel issue when we freeze the whole cgroup upon OOM. Mesos probably can just use PID namespace","so that we will only need to kill the init of the pid namespace, instead of freezing all the processes and killing them one by one. But I am not quite sure if this would break the existing code.","Add for who this story is","well_formed","no_role","high",False
17203,"There is some known kernel issue when we freeze the whole cgroup upon OOM. Mesos probably can just use PID namespace so that we will only need to kill the init of the pid namespace, instead of freezing all the processes and killing them one by one. But I am not quite sure if this would break the existing code.",NULL,"There is some known kernel issue when we freeze the whole cgroup upon OOM. Mesos probably can just use PID namespace","so that we will only need to kill the init of the pid namespace, instead of freezing all the processes and killing them one by one. But I am not quite sure if this would break the existing code.","There is some known kernel issue when we freeze the whole cgroup upon OOM<span class='highlight-text severity-high'>. Mesos probably can just use PID namespace so that we will only need to kill the init of the pid namespace, instead of freezing all the processes and killing them one by one. But I am not quite sure if this would break the existing code.</span>","minimal","punctuation","high",False
17203,"There is some known kernel issue when we freeze the whole cgroup upon OOM. Mesos probably can just use PID namespace so that we will only need to kill the init of the pid namespace, instead of freezing all the processes and killing them one by one. But I am not quite sure if this would break the existing code.",NULL,"There is some known kernel issue when we freeze the whole cgroup upon OOM. Mesos probably can just use PID namespace","so that we will only need to kill the init of the pid namespace, instead of freezing all the processes and killing them one by one. But I am not quite sure if this would break the existing code.","Use the most common template: So","uniform","uniform","medium",False
17204,"We now have a message string inside TaskStatus that provides human readable information about TASK FAILED. It would be good to add some structure to the failure reasons, for framework schedulers to act on programmatically. E.g. enum TaskFailure EXECUTOR OOM; EXECUTOR OUT OF DISK; EXECUTOR TERMINATED; SLAVE LOST; etc.. ",NULL,"We now have a message string inside TaskStatus that provides human readable information about TASK FAILED. It would be good to add some structure to the failure reasons, for framework schedulers to act on programmatically. E.g. enum TaskFailure EXECUTOR OOM; EXECUTOR OUT OF DISK; EXECUTOR TERMINATED; SLAVE LOST; etc.. ",NULL,"Add for who this story is","well_formed","no_role","high",False
17204,"We now have a message string inside TaskStatus that provides human readable information about TASK FAILED. It would be good to add some structure to the failure reasons, for framework schedulers to act on programmatically. E.g. enum TaskFailure EXECUTOR OOM; EXECUTOR OUT OF DISK; EXECUTOR TERMINATED; SLAVE LOST; etc.. ",NULL,"We now have a message string inside TaskStatus that provides human readable information about TASK FAILED. It would be good to add some structure to the failure reasons, for framework schedulers to act on programmatically. E.g. enum TaskFailure EXECUTOR OOM; EXECUTOR OUT OF DISK; EXECUTOR TERMINATED; SLAVE LOST; etc.. ",NULL,"We now have a message string inside TaskStatus that provides human readable information about TASK FAILED<span class='highlight-text severity-high'>. It would be good to add some structure to the failure reasons, for framework schedulers to act on programmatically. E.g. enum TaskFailure EXECUTOR OOM; EXECUTOR OUT OF DISK; EXECUTOR TERMINATED; SLAVE LOST; etc.. </span>","minimal","punctuation","high",False
